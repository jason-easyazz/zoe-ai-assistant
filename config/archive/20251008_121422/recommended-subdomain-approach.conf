# RECOMMENDED: Clean Subdomain Approach
# Maximizes compatibility while maintaining simplicity

# Main Zoe UI - Primary domain
server {
    listen 80;
    listen 443 ssl http2;
    server_name zoe.local;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/zoe.local.crt;
    ssl_certificate_key /etc/nginx/ssl/zoe.local.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    
    # Redirect HTTP to HTTPS
    if ($scheme != "https") {
        return 301 https://$server_name$request_uri;
    }
    
    root /usr/share/nginx/html;
    index index.html;
    
    location / {
        try_files $uri $uri/ /index.html;
    }
    
    location /developer/ {
        alias /usr/share/nginx/html/developer/;
        try_files $uri $uri/ /developer/index.html;
    }
    
    # API routes (keep existing working config)
    location /api/auth/ {
        proxy_pass http://zoe-auth:8002/api/auth/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Session-ID" always;
        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }
    
    location /api/ {
        proxy_pass http://zoe-core:8000/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location /health {
        proxy_pass http://zoe-core:8000/health;
    }
}

# N8N Automation - Clean subdomain
server {
    listen 80;
    listen 443 ssl http2;
    server_name n8n.zoe.local;
    
    ssl_certificate /etc/nginx/ssl/zoe.local.crt;
    ssl_certificate_key /etc/nginx/ssl/zoe.local.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    
    if ($scheme != "https") {
        return 301 https://$server_name$request_uri;
    }
    
    location / {
        proxy_pass http://zoe-n8n:5678;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 86400;
    }
}

# Home Assistant - Clean subdomain
server {
    listen 80;
    listen 443 ssl http2;
    server_name ha.zoe.local;
    
    ssl_certificate /etc/nginx/ssl/zoe.local.crt;
    ssl_certificate_key /etc/nginx/ssl/zoe.local.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    
    if ($scheme != "https") {
        return 301 https://$server_name$request_uri;
    }
    
    location / {
        proxy_pass http://192.168.1.60:8123;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support for Home Assistant
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 86400;
    }
}

