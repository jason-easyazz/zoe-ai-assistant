# Enhanced Nginx Configuration for Standard Ports
# Serves all services through ports 80/443 with proper HTTPS

# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name zoe.local ha.zoe.local;
    return 301 https://$server_name$request_uri;
}

# Main Zoe UI and API Server
server {
    listen 443 ssl http2;
    server_name zoe.local;
    
    # SSL Configuration with mkcert certificates
    ssl_certificate /etc/nginx/ssl/zoe.local.crt;
    ssl_certificate_key /etc/nginx/ssl/zoe.local.key;
    
    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    root /usr/share/nginx/html;
    index index.html;
    
    # Main UI - Serve from root
    location / {
        try_files $uri $uri/ /index.html;
    }
    
    location /developer/ {
        alias /usr/share/nginx/html/developer/;
        try_files $uri $uri/ /developer/index.html;
    }
    
    # API Routes (Already working - keep as-is)
    location /api/auth/ {
        proxy_pass http://zoe-auth:8002/api/auth/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Session-ID" always;
        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }
    
    location /api/ {
        proxy_pass http://zoe-core:8000/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # N8N Automation (Subfolder approach)
    location /n8n/ {
        proxy_pass http://zoe-n8n:5678/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        # WebSocket support for N8N
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
        
        # N8N specific headers
        proxy_set_header X-Forwarded-Prefix /n8n;
    }
    
    location /health {
        proxy_pass http://zoe-core:8000/health;
    }
}

# Home Assistant (Subdomain to avoid path issues)
server {
    listen 443 ssl http2;
    server_name ha.zoe.local;
    
    # Use same SSL certificates (wildcard)
    ssl_certificate /etc/nginx/ssl/zoe.local.crt;
    ssl_certificate_key /etc/nginx/ssl/zoe.local.key;
    
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    location / {
        proxy_pass http://192.168.1.60:8123;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Home Assistant WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
        
        # Home Assistant specific headers
        proxy_set_header X-Forwarded-Host $host;
        proxy_redirect off;
    }
}

