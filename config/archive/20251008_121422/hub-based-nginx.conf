# Hub-Based Approach: zoe.local as the central access point
# Mass adoption ready - no DNS configuration required

# Enable mDNS/Avahi service discovery
# This makes zoe.local automatically discoverable on the network

server {
    listen 80;
    server_name zoe.local *.zoe.local _;
    
    # Optional HTTPS redirect only if certificates are available
    # For mass adoption, HTTP is fine for local network
    
    root /usr/share/nginx/html;
    index index.html;
    
    # Main Zoe UI - The Hub
    location / {
        try_files $uri $uri/ /index.html;
        
        # Add navigation hints in response headers for discovery
        add_header X-Zoe-Services "automation:5678,home:8123,ollama:11434" always;
        add_header X-Zoe-Version "5.0" always;
    }
    
    location /developer/ {
        alias /usr/share/nginx/html/developer/;
        try_files $uri $uri/ /developer/index.html;
    }
    
    # API Routes (keep existing working config)
    location /api/auth/ {
        proxy_pass http://zoe-auth:8002/api/auth/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Session-ID" always;
        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }
    
    location /api/ {
        proxy_pass http://zoe-core:8000/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Service Discovery Endpoint
    location /api/services {
        add_header Content-Type application/json;
        return 200 '{
            "services": {
                "automation": {
                    "name": "N8N Automation",
                    "url": "http://zoe.local:5678",
                    "embedded": false,
                    "description": "Workflow automation"
                },
                "home": {
                    "name": "Home Assistant", 
                    "url": "http://zoe.local:8123",
                    "embedded": false,
                    "description": "Home automation and control"
                },
                "ollama": {
                    "name": "Ollama AI",
                    "url": "http://zoe.local:11434", 
                    "embedded": false,
                    "description": "Local AI model API"
                }
            }
        }';
    }
    
    # Embedded service access (for iframe integration)
    location /embed/n8n/ {
        proxy_pass http://zoe-n8n:5678/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Remove X-Frame-Options to allow embedding
        proxy_hide_header X-Frame-Options;
        add_header X-Frame-Options "SAMEORIGIN" always;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
    }
    
    location /health {
        proxy_pass http://zoe-core:8000/health;
    }
}

