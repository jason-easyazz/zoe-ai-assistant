# Clean zoe.local configuration for mass adoption
# Primary access: http://zoe.local and https://zoe.local

# HTTP server - redirect to HTTPS or serve directly
server {
    listen 80;
server_name zoe.local *.zoe.local _;
    
    # Force HTTPS for all pages (desktop and touch)
    return 301 https://$server_name$request_uri;
    
    root /usr/share/nginx/html;
    index index.html;
    
    # Add discovery headers for touch panels and apps
    add_header X-Zoe-Services "automation:5678,home:8123,ollama:11434" always;
    add_header X-Zoe-Version "5.0" always;
    add_header X-Zoe-Discovery "http://zoe.local/api/services" always;
    
    location / {
        try_files $uri $uri/ /index.html;
    }

    # n8n subpath over HTTP (fallback when DNS for n8n.* is unavailable)
    location /n8n/ {
        proxy_pass http://zoe-n8n:5678/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
    
    location /developer/ {
        alias /usr/share/nginx/html/developer/;
        try_files $uri $uri/ /developer/index.html;
    }
    
    # Touch Interface - Main touch panel interface (redirected to HTTPS)
    location /touch/ {
        return 301 https://$server_name$request_uri;
    }
    
    # Touch Panel Configuration Interface
    location /touch-panel-config/ {
        alias /usr/share/nginx/html/touch-panel-config/;
        try_files $uri $uri/ /touch-panel-config/index.html;
    }
}

# HTTPS Server (for microphone access and security)
server {
    listen 443 ssl http2;
server_name zoe.local *.zoe.local _;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/zoe.crt;
    ssl_certificate_key /etc/nginx/ssl/zoe.key;
    
    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    root /usr/share/nginx/html;
    index index.html;
    
    # Add discovery headers
    add_header X-Zoe-Services "automation:5678,home:8123,ollama:11434" always;
    add_header X-Zoe-Version "5.0" always;
    add_header X-Zoe-Discovery "https://zoe.local/api/services" always;
    
    location / {
        try_files $uri $uri/ /index.html;
    }

    # n8n subpath over HTTPS (preferred)
    location ^~ /n8n/ {
        proxy_pass http://zoe-n8n:5678/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Prefix /n8n;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_redirect off;
    }
    
    location /developer/ {
        alias /usr/share/nginx/html/developer/;
        try_files $uri $uri/ /developer/index.html;
    }
    
    # Touch Interface - Main touch panel interface (HTTPS)
    location /touch/ {
        alias /usr/share/nginx/html/touch/;
        try_files $uri $uri/ /touch/index.html;
    }
    
    # Service Discovery Endpoint (HTTPS version)
    location /api/services {
        add_header Content-Type application/json;
        return 200 '{
            "zoe": {
                "name": "Zoe AI Assistant",
                "version": "5.0",
                "hostname": "zoe.local",
                "main_url": "https://zoe.local",
                "api_url": "https://zoe.local/api",
                "discovery_method": "mDNS"
            },
            "services": {
                "automation": {
                    "name": "N8N Automation",
                    "url": "https://zoe.local:5678",
                    "type": "workflow",
                    "description": "Workflow automation and integrations"
                },
                "home": {
                    "name": "Home Assistant", 
                    "url": "https://zoe.local:8123",
                    "type": "home_automation", 
                    "description": "Home automation and device control"
                },
                "ollama": {
                    "name": "Ollama AI",
                    "url": "https://zoe.local:11434",
                    "type": "ai_api",
                    "description": "Local AI model API"
                }
            }
        }';
    }
    
    # CRITICAL: Proxy Auth API requests to auth service (priority route)
    location /api/auth/ {
        proxy_pass http://zoe-auth:8002/api/auth/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Proxy other API requests to core service
    location /api/ {
        proxy_pass http://172.23.0.3:8000/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
    
    location /health {
        proxy_pass http://172.23.0.3:8000/health;
    }
    
    # WebSocket proxying
    location /ws/ {
        proxy_pass http://172.23.0.3:8000/ws/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
    }
}

# n8n subdomain - HTTP redirect to HTTPS
server {
    listen 80;
server_name n8n.zoe.local n8n.local;
    return 301 https://$host$request_uri;
}

# n8n subdomain - HTTPS reverse proxy
server {
    listen 443 ssl http2;
    server_name n8n.zoe.local;

    ssl_certificate /etc/nginx/ssl/zoe.crt;
    ssl_certificate_key /etc/nginx/ssl/zoe.key;

    # Proxy to n8n container
    location / {
        proxy_pass http://zoe-n8n:5678/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}
